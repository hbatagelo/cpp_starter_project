language: cpp
os: linux
dist: xenial
sudo: false

branches:
  only:
    - master

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "pPg/vC9q6k6Yi9JynXu607w64mjmXY3OkW1HoskygoYkC9leMuQajtU1rtnNXrQ0n1Tuovm+vntpw2YJAcHMZXJlneb/XuILMZEfysIEHtCxuX6z0bXmAnBZOG+AG9Lw0Q/sZ/1EgMjQaqNLRJCLju0oyoc1xpS3b0nLieKAkj65DmTfY6BB0x7gnvJt1Crbx9DOe1RKZS1YnIEbZuOTV0IDHvGN4R7vrY7eVIhHz5+4P8cZcgrUvfSGWR1Ak/oUu1lbrNFaOzuyWZyy89PZHljBOfeXjfQ224qc5RSEiIe9qQIR14fmvwZ2Yq4qvMz2duZH2Ti1WDVNNw7WxBVq3tjFHDPBd5NBSTSzg6SVakHeKuy1VRrNs0EN+FY7MgW7kXrtSvbSZYpcKdlViflLUSecG+VLzAHMCecWw0dGGdKwOBlF1ToMiNJ84UE646jnJm01jJqM8KCVAnf8/VoDbVPymrP+DLvnxjl+CC7676oBStlKXgdvVqOQJNqtIGeXjiBt2eQSeRguZWaxQLuZ+VvImUuS052RpxNsf7c4q2sy3torrP9g+8RTJ6pUf8oq7I2fbJKU/WCgAxNkZkMvHTj6lQSsQOd0wOeWteHxQD83KngwcU5LWKk+ayPn5VHhFpoGzqd5KR2AORtk1cSyqT2JeWrUqWH+dJ/wjaiULnE="

before_install:
  - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
    # Install lcov 1.14
  - wget http://mirrors.us.kernel.org/ubuntu//pool/universe/l/lcov/lcov_1.14-2_all.deb
  - sudo apt install ./lcov_1.14-2_all.deb

install:
  - pip install --user conan cmake

addons:
  coverity_scan:
    project:
      name: "hbatagelo/cpp_starter_project"
      description: "A barebones C++ project with CI"
    notification_email: harlen.batagelo@gmail.com
    build_command_prepend: "./build.sh"
    build_command: ""
    branch_pattern: master

matrix:
  include:
    - compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-9
            - doxygen
      env:
        - MATRIX_EVAL="CC=clang-9 && CXX=clang++-9"

    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
            #- lcov
            - doxygen
      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
        # && GCOV=gcov-9"

before_script:
  - eval "${MATRIX_EVAL}"

script: 
  - ./build.sh

after_success:
  - |
    # Create coverage reporting (gcc only)
    if [ "$TRAVIS_COMPILER" == "gcc" ]; then
      cd ${TRAVIS_BUILD_DIR}
      lcov --version
      lcov --capture --directory . --output-file coverage.info --gcov-tool /usr/bin/gcov-9
      lcov --remove coverage.info '*conan/data/*' '/usr/*' --output-file coverage.info
      lcov --list coverage.info
      # Uploading report to Codecov
      bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
    fi

notifications:
  email: false